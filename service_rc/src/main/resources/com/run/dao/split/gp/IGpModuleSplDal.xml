<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.run.dao.split.gp.IGpModuleSplDal">

	<resultMap id="BaseResultMap" type="com.run.ent.extend.gp.GpModule">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="domain_id" property="domainId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
		<result column="level_code" property="levelCode" jdbcType="TINYINT" />
		<result column="level_text" property="levelText" jdbcType="VARCHAR" />
		<result column="farther_id" property="fartherId" jdbcType="VARCHAR" />
		<result column="priority" property="priority" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		id,domain_id,name,serial_no,level_code,level_text,farther_id,priority,remark,add_time,update_time
	</sql>

	<sql id="ABase_Column_List">
		A.id,A.domain_id,A.name,A.serial_no,A.level_code,A.level_text,A.farther_id,A.priority,A.remark,A.add_time,A.update_time
	</sql>

	<insert id="add" parameterType="com.run.ent.extend.gp.GpModule">
		insert into gp_module
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null and id != '' ">
				id,
			</if>
			<if test="domainId != null and domainId != '' ">
				domain_id,
			</if>
			<if test="name != null and name != '' ">
				name,
			</if>
			<if test="serialNo != null and serialNo != '' ">
				serial_no,
			</if>
			<if test="levelCode != null ">
				level_code,
			</if>
			<if test="levelText != null and levelText != '' ">
				level_text,
			</if>

			<if test="fartherId != null and fartherId != '' ">
				farther_id,
			</if>

			<if test="priority != null ">
				priority,
			</if>
			<if test="remark != null and remark != '' ">
				remark,
			</if>

			<if test="addTime != null ">
				add_time,
			</if>
			<if test="updateTime != null ">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null and id != '' ">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="domainId != null and domainId != '' ">
				#{domainId,jdbcType=VARCHAR},
			</if>
			<if test="name != null and name != '' ">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="serialNo != null and serialNo != '' ">
				#{serialNo,jdbcType=VARCHAR},
			</if>
			<if test="levelCode != null ">
				#{levelCode,jdbcType=TINYINT},
			</if>
			<if test="levelText != null and levelText != '' ">
				#{levelText,jdbcType=VARCHAR},
			</if>
			<if test="fartherId != null and fartherId != '' ">
				#{fartherId,jdbcType=VARCHAR},
			</if>
			<if test="priority != null ">
				#{priority,jdbcType=INTEGER},
			</if>
			<if test="remark != null and remark != '' ">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null ">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null ">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>


	<insert id="addList" parameterType="list">
		insert into gp_module
		<trim prefix="(" suffix=")">
			<include refid="Base_Column_List" />
		</trim>
		values
		<foreach collection="list" item="gpModule" index="index" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{gpModule.id,jdbcType=VARCHAR},
				#{gpModule.domainId,jdbcType=VARCHAR},
				#{gpModule.name,jdbcType=VARCHAR},
				#{gpModule.serialNo,jdbcType=VARCHAR},
				#{gpModule.levelCode,jdbcType=TINYINT},
				#{gpModule.levelText,jdbcType=VARCHAR},
				#{gpModule.fartherId,jdbcType=VARCHAR},
				#{gpModule.priority,jdbcType=INTEGER},
				#{gpModule.remark,jdbcType=VARCHAR},
				#{gpModule.addTime,jdbcType=TIMESTAMP},
				#{gpModule.updateTime,jdbcType=TIMESTAMP},
			</trim>
		</foreach>
	</insert>


	<delete id="delete" parameterType="java.lang.String">
		delete a,b,c,d from gp_module a left join gpr_role_module b on a.id=b.module_id left join gpr_module_page c on a.id=c.module_id left join gp_menu d on a.id=d.module_id
		where a.id = #{id,jdbcType=VARCHAR}
	</delete>

	<delete id="deleteByDomainId" parameterType="java.lang.String">
		delete a,b,c,d from gp_module a left join gpr_role_module b on a.id=b.module_id left join gpr_module_page c on a.id=c.module_id left join gp_menu d on a.id=d.module_id
		where a.domain_id = #{domainId,jdbcType=VARCHAR}
	</delete>

	<delete id="deleteByIdList" parameterType="list">
		delete a,b,c,d from gp_module a left join gpr_role_module b on a.id=b.module_id left join gpr_module_page c on a.id=c.module_id left join gp_menu d on a.id=d.module_id
		where a.id in
		<foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteByDomainIdList" parameterType="list">
		delete a,b,c,d from gp_module a left join gpr_role_module b on a.id=b.module_id left join gpr_module_page c on a.id=c.module_id left join gp_menu d on a.id=d.module_id
		where a.domain_id in
		<foreach collection="list" item="domainId" index="index" open="(" close=")" separator=",">
			#{domainId}
		</foreach>
	</delete>

	<delete id="deleteInvalidDomainModules">
		delete a,b,c,d from gp_module a left join gpr_role_module b on a.id=b.module_id left join gpr_module_page c on a.id=c.module_id left join gp_menu d on a.id=d.module_id
		where a.domain_id= #{domainId} and a.id not in
		<foreach collection="moduleList" item="module" index="index" open="(" close=")" separator=",">
			#{module.id }
		</foreach>
	</delete>

	<update id="update" parameterType="com.run.ent.extend.gp.GpModule">
		update gp_module
		<set>
			<if test="domainId != null  and domainId != '' ">
				domain_id = #{domainId,jdbcType=VARCHAR},
			</if>
			<if test="name != null  and name != '' ">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="serialNo != null  and serialNo != '' ">
				serial_no = #{serialNo,jdbcType=VARCHAR},
			</if>
			<if test="levelCode != null ">
				level_code = #{levelCode,jdbcType=TINYINT},
			</if>
			<if test="levelText != null  and levelText != '' ">
				level_text = #{levelText,jdbcType=VARCHAR},
			</if>
			<if test="fartherId != null  and fartherId != '' ">
				farther_id = #{fartherId,jdbcType=VARCHAR},
			</if>
			<if test="priority != null ">
				priority = #{priority,jdbcType=INTEGER},
			</if>
			<if test="remark != null  and remark != '' ">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null ">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null ">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<update id="updateList">
		update gp_module
		<set>
			<if test="t.domainId != null  and t.domainId != '' ">
				domain_id = #{t.domainId,jdbcType=VARCHAR},
			</if>
			<if test="t.name != null  and t.name != '' ">
				name = #{t.name,jdbcType=VARCHAR},
			</if>
			<if test="t.serialNo != null  and t.serialNo != '' ">
				serial_no = #{t.serialNo,jdbcType=VARCHAR},
			</if>
			<if test="t.levelCode != null ">
				level_code = #{t.levelCode,jdbcType=TINYINT},
			</if>
			<if test="t.levelText != null  and t.levelText != '' ">
				level_text = #{t.levelText,jdbcType=VARCHAR},
			</if>
			<if test="t.fartherId != null  and t.fartherId != '' ">
				farther_id = #{t.fartherId,jdbcType=VARCHAR},
			</if>
			<if test="t.priority != null ">
				priority = #{t.priority,jdbcType=INTEGER},
			</if>
			<if test="t.remark != null  and t.remark != '' ">
				remark = #{t.remark,jdbcType=VARCHAR},
			</if>
			<if test="t.addTime != null ">
				add_time = #{t.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="t.updateTime != null ">
				update_time = #{t.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id in
		<foreach collection="idList" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
	</update>

	<update id="updateDomainModules" parameterType="list">
		insert INTO gp_module
		<trim prefix="(" suffix=")">
			<include refid="Base_Column_List" />
		</trim>
		VALUES
		<foreach collection="list" item="gpModule" index="index" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{gpModule.id,jdbcType=VARCHAR},
				#{gpModule.domainId,jdbcType=VARCHAR},
				#{gpModule.name,jdbcType=VARCHAR},
				#{gpModule.serialNo,jdbcType=VARCHAR},
				#{gpModule.levelCode,jdbcType=TINYINT},
				#{gpModule.levelText,jdbcType=VARCHAR},
				#{gpModule.fartherId,jdbcType=VARCHAR},
				#{gpModule.priority,jdbcType=INTEGER},
				#{gpModule.remark,jdbcType=VARCHAR},
				#{gpModule.addTime,jdbcType=TIMESTAMP},
				#{gpModule.updateTime,jdbcType=TIMESTAMP},
			</trim>
		</foreach>
		ON DUPLICATE KEY UPDATE
		domain_id = VALUES(domain_id),
		name = VALUES(name),
		level_code = VALUES(level_code),
		level_text = VALUES(level_text),
		farther_id = VALUES(farther_id),
		priority = VALUES(priority),
		update_time = VALUES(update_time)
	</update>

	<select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from gp_module
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="getList" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from gp_module where 1 = 1
		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id LIKE CONCAT('%',#{EntityRelated.id,jdbcType=VARCHAR},'%')
		</if>

		<if test="EntityRelated.beginAddTime != null ">
				<![CDATA[ AND  unix_timestamp(add_time)>=unix_timestamp(#{EntityRelated.beginAddTime})]]>
		</if>
		<if test="EntityRelated.endAddTime != null ">
				<![CDATA[ AND  unix_timestamp(add_time)<unix_timestamp(#{EntityRelated.endAddTime})]]>
		</if>
		<if test="EntityRelated.domainId != null and EntityRelated.domainId != '' ">
			and domain_id = #{EntityRelated.domainId,jdbcType=VARCHAR}
		</if>
		<if test="EntityRelated.fartherId != null and EntityRelated.fartherId != '' ">
			and farther_id = #{EntityRelated.fartherId,jdbcType=VARCHAR}
		</if>
		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id = #{EntityRelated.id,jdbcType=VARCHAR}
		</if>
		<if test="EntityRelated.levelCode != null">
			and level_code = #{EntityRelated.levelCode,jdbcType=TINYINT}
		</if>
		<if test="EntityRelated.levelText != null and EntityRelated.levelText != '' ">
			and level_text LIKE CONCAT('%',#{EntityRelated.levelText,jdbcType=VARCHAR},'%')
		</if>
		<if test="EntityRelated.name != null and EntityRelated.name != '' ">
			and name LIKE CONCAT('%',#{EntityRelated.name,jdbcType=VARCHAR},'%')
		</if>
		<if test="EntityRelated.remark != null and EntityRelated.remark != '' ">
			and remark LIKE CONCAT('%',#{EntityRelated.remark,jdbcType=VARCHAR},'%')
		</if>
		<if test="EntityRelated.serialNo != null and EntityRelated.serialNo != '' ">
			and serial_no LIKE CONCAT('%',#{EntityRelated.serialNo,jdbcType=VARCHAR},'%')
		</if>
		<if test="EntityRelated.beginUpdateTime != null ">
				<![CDATA[ AND  unix_timestamp(update_time)>=unix_timestamp(#{EntityRelated.beginUpdateTime})]]>
		</if>
		<if test="EntityRelated.endUpdateTime != null ">
				<![CDATA[ AND  unix_timestamp(update_time)<unix_timestamp(#{EntityRelated.endUpdateTime})]]>
		</if>


		<if test="OrderList != null and OrderList!=null">
			order by
			<foreach collection="OrderList" item="Order" index="index" separator=",">
				${Order.columnName}
				<if test="Order.isASC">
					ASC
				</if>
				<if test="!Order.isASC">
					DESC
				</if>
			</foreach>
		</if>
	</select>

	<select id="getListBySQL" resultType="java.util.HashMap" parameterType="String">
		<if test="value!=null and value!=''">
			${value}
		</if>
	</select>

	<select id="getListByDomainId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from gp_module where domain_id = #{domainId,jdbcType=VARCHAR} order by priority
	</select>

	<select id="getListByRoleId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="ABase_Column_List" />
		from gp_module a inner join gpr_role_module b on a.id=b.module_id where role_id = #{roleId,jdbcType=VARCHAR} order by priority
	</select>

	<cache />
</mapper>